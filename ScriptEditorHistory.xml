<?xml version="1.0" encoding="UTF-8"?><script>node = nuke.selectedNode()</script><script>node = nuke.selectedNode()
print (node)</script><script>nodeSelected = nuke.selectedNode()
fileName = nodeSelected.knob('file')

#print (nodeSelected)
print (fileName)</script><script>nodeSelected = nuke.selectedNode()
fileName = nodeSelected.knob('file').value()

#print (nodeSelected)
print (fileName)</script><script>import nuke
import os

nodeSelected = nuke.selectedNode()
fileName = nodeSelected.knob('file').value()

#print (nodeSelected)
print (fileName.split(os.sep))</script><script>import nuke
import os

nodeSelected = nuke.selectedNode()
fileName = nodeSelected.knob('file').value()

#print (nodeSelected)
print (fileName.split('os.sep'))</script><script>import nuke
import os

nodeSelected = nuke.selectedNode()
fileName = nodeSelected.knob('file').value()

#print (nodeSelected)
print (fileName.split('/'))</script><script>import nuke
import os

nodeSelected = nuke.selectedNode()
fileName = nodeSelected.knob('file').value()

#print (nodeSelected)
print (fileName.split('/')[-2])</script><script>import nuke
import os

nodeSelected = nuke.selectedNode()
fileName = nodeSelected.knob('file').value()

#print (nodeSelected)
layer = fileName.split('/')[-2]
print (fileName.split('/')[-3])</script><script>import nuke
import os

nodeSelected = nuke.selectedNode()
fileName = nodeSelected.knob('file').value()

#print (nodeSelected)
layer = fileName.split('/')[-2]
print (layer)
version = fileName.split('/')[-3]
print (version)
print (fileName.split('/'))</script><script>import nuke
import os

nodeSelected = nuke.selectedNode()
fileName = nodeSelected.knob('file').value()

#print (nodeSelected)
layer = fileName.split('/')[-2]
print (layer)
version = fileName.split('/')[-3]
print (version)

print (fileName)</script><script>import nuke
import os

nodeSelected = nuke.selectedNode()
fileName = nodeSelected.knob('file').value()
print (fileName)

#print (nodeSelected)
layer = fileName.split('/')[-2]
print (layer)

version = fileName.split('/')[-3]
print (version)

inPath = fileName.split('/')[:-3]
print (inPath)</script><script>import nuke
import os

nodeSelected = nuke.selectedNode()
fileName = nodeSelected.knob('file').value()
print (fileName)

#print (nodeSelected)
layer = fileName.split('/')[-2]
print (layer)

version = fileName.split('/')[-3]
print (version)

inPath = fileName[:-3]
print (inPath)</script><script>import nuke
import os

nodeSelected = nuke.selectedNode()
fileName = nodeSelected.knob('file').value()
print (fileName)

#print (nodeSelected)
layer = fileName.split('/')[-2]
print (layer)

version = fileName.split('/')[-3]
print (version)

inPath = fileName.split('/')[:-3]
print (inPath)

osPath = []
for i in inPath:
    osPath += os.sep + i
print (osPath)</script><script>import nuke
import os

nodeSelected = nuke.selectedNode()
fileName = nodeSelected.knob('file').value()
print (fileName)

#print (nodeSelected)
layer = fileName.split('/')[-2]
print (layer)

version = fileName.split('/')[-3]
print (version)

inPath = fileName.split('/')[:-3]
print (inPath)

osPath = []
for i in inPath:
    osPath += i
print (osPath)</script><script>import nuke
import os

nodeSelected = nuke.selectedNode()
fileName = nodeSelected.knob('file').value()
print (fileName)

#print (nodeSelected)
layer = fileName.split('/')[-2]
print (layer)

version = fileName.split('/')[-3]
print (version)

inPath = fileName.split('/')[:-3]
print (inPath)

osPath = []
for i in inPath:
    osPath = i
print (osPath)</script><script>import nuke
import os

nodeSelected = nuke.selectedNode()
fileName = nodeSelected.knob('file').value()
print (fileName)

#print (nodeSelected)
layer = fileName.split('/')[-2]
print (layer)

version = fileName.split('/')[-3]
print (version)

inPath = fileName.split('/')[:-3]
print (inPath)

osPath = []
for i in inPath:
    osPath += i
print (osPath)</script><script>import nuke
import os

nodeSelected = nuke.selectedNode()
fileName = nodeSelected.knob('file').value()
print (fileName)

#print (nodeSelected)
layer = fileName.split('/')[-2]
print (layer)

version = fileName.split('/')[-3]
print (version)

inPath = fileName.split('/')[:-3]
print (inPath)
print (type(inPath))

osPath = []
for i in inPath:
    print (type(i))
    osPath = inPath + [i]
    
print (osPath)</script><script>import nuke
import os

nodeSelected = nuke.selectedNode()
fileName = nodeSelected.knob('file').value()
print (fileName)

#print (nodeSelected)
layer = fileName.split('/')[-2]
print (layer)

version = fileName.split('/')[-3]
print (version)

inPath = fileName.split('/')[:-3]
print (inPath)
print (type(inPath))

osPath = []
for i in inPath:
    print (type(i))
    osPath = str(inPath) + i
    
print (osPath)</script><script>import nuke
import os
import sys

nodeSelected = nuke.selectedNode()
fileName = nodeSelected.knob('file').value()
print (fileName)

#print (nodeSelected)
layer = fileName.split('/')[-2]
#print (layer)

version = fileName.split('/')[-3]
#print (version)

inPath = fileName.split('/')[:-3]
print (inPath)
#print (type(inPath))


#if sys.platform == &quot;win32&quot;:
#    osPath = inPath.replace('/', os.sep)    #chenges slash to back slash in windows OS
    
print (osPath)</script><script>import nuke
import os
import sys

nodeSelected = nuke.selectedNode()
fileName = nodeSelected.knob('file').value()
print (fileName)

#print (nodeSelected)
layer = fileName.split('/')[-2]
#print (layer)

version = fileName.split('/')[-3]
#print (version)

inPath = fileName.split('/')[:-3]
print (inPath)
#print (type(inPath))


#if sys.platform == &quot;win32&quot;:
#    osPath = inPath.replace('/', os.sep)    #chenges slash to back slash in windows OS
    
print (osPath)</script><script>import nuke
import os
import sys

nodeSelected = nuke.selectedNode()
fileName = nodeSelected.knob('file').value()
print (fileName)

#print (nodeSelected)
layer = fileName.split('/')[-2]
#print (layer)

version = fileName.split('/')[-3]
#print (version)

inPath = fileName.split('/')[:-3]
print (inPath)
#print (type(inPath))


#if sys.platform == &quot;win32&quot;:
#    osPath = inPath.replace('/', os.sep)    #chenges slash to back slash in windows OS
    
#print (osPath)</script><script>import nuke
import os
import sys

nodeSelected = nuke.selectedNode()
fileName = nodeSelected.knob('file').value()
print (fileName)

#print (nodeSelected)
layer = fileName.split('/')[-2]
#print (layer)

version = fileName.split('/')[-3]
#print (version)

inPath = fileName.split('/')[:-3]
print (inPath)
osPath += str(inPath)
#print (type(inPath))


#if sys.platform == &quot;win32&quot;:
#    osPath = inPath.replace('/', os.sep)    #chenges slash to back slash in windows OS
    
print (osPath)</script><script>import nuke
import os
import sys

nodeSelected = nuke.selectedNode()
fileName = nodeSelected.knob('file').value()
print (fileName)

#print (nodeSelected)
layer = fileName.split('/')[-2]
#print (layer)

version = fileName.split('/')[-3]
#print (version)

inPath = fileName.split('/')[:-3]
print (inPath)
osPath = []
osPath += str(inPath)
#print (type(inPath))


#if sys.platform == &quot;win32&quot;:
#    osPath = inPath.replace('/', os.sep)    #chenges slash to back slash in windows OS
    
print (osPath)</script><script>import nuke
import os
import sys

nodeSelected = nuke.selectedNode()
fileName = nodeSelected.knob('file').value()
print (fileName)

#print (nodeSelected)
layer = fileName.split('/')[-2]
#print (layer)

version = fileName.split('/')[-3]
#print (version)

inPath = fileName.split('/')[:-3]
print (inPath)
osPath = []
#osPath += str(inPath)
#print (type(inPath))


#if sys.platform == &quot;win32&quot;:
#    osPath = inPath.replace('/', os.sep)    #chenges slash to back slash in windows OS
    
print (osPath)</script><script>import nuke
import os
import sys

nodeSelected = nuke.selectedNode()
fileName = nodeSelected.knob('file').value()
print (fileName)

#print (nodeSelected)
layer = fileName.split('/')[-2]
#print (layer)

version = fileName.split('/')[-3]
#print (version)

inPath = fileName.split('/')[:-3]
print (inPath)
for i in inPath:
    print (i)
osPath = []
#osPath += str(inPath)
#print (type(inPath))


#if sys.platform == &quot;win32&quot;:
#    osPath = inPath.replace('/', os.sep)    #chenges slash to back slash in windows OS
    
print (osPath)</script><script>import nuke
import os
import sys

nodeSelected = nuke.selectedNode()
fileName = nodeSelected.knob('file').value()
print (fileName)

#print (nodeSelected)
layer = fileName.split('/')[-2]
#print (layer)

version = fileName.split('/')[-3]
#print (version)

osPath = []
inPath = fileName.split('/')[:-3]
print (inPath)
for i in inPath:
    #print (i)
    osPath += i    


#osPath += str(inPath)
#print (type(inPath))


#if sys.platform == &quot;win32&quot;:
#    osPath = inPath.replace('/', os.sep)    #chenges slash to back slash in windows OS
    
print (osPath)</script><script>import nuke
import os
import sys

nodeSelected = nuke.selectedNode()
fileName = nodeSelected.knob('file').value()
print (fileName)

#print (nodeSelected)
layer = fileName.split('/')[-2]
#print (layer)

version = fileName.split('/')[-3]
#print (version)

osPath = []
inPath = fileName.split('/')[:-3]
print (inPath)
for i in inPath:
    #print (i)
    osPath += str(i)    


#osPath += str(inPath)
#print (type(inPath))


#if sys.platform == &quot;win32&quot;:
#    osPath = inPath.replace('/', os.sep)    #chenges slash to back slash in windows OS
    
print (osPath)</script><script>import nuke
import os
import sys

nodeSelected = nuke.selectedNode()
fileName = nodeSelected.knob('file').value()
print (fileName)

#print (nodeSelected)
layer = fileName.split('/')[-2]
#print (layer)

version = fileName.split('/')[-3]
#print (version)

osPath = []
inPath = fileName.split('/')[:-3]
print (inPath)
for i in inPath:
    #print (i)
    osPath += list(i)    

#print (type(inPath))


#if sys.platform == &quot;win32&quot;:
#    osPath = inPath.replace('/', os.sep)    #chenges slash to back slash in windows OS
    
print (osPath)</script><script>import nuke
import os
import sys

nodeSelected = nuke.selectedNode()
fileName = nodeSelected.knob('file').value()
print (fileName)

#print (nodeSelected)
layer = fileName.split('/')[-2]
#print (layer)

version = fileName.split('/')[-3]
#print (version)

osPath = []
inPath = fileName.split('/')[:-3]

print (inPath)
for i in inPath:
    #print (i)
    osPath += i

#print (type(inPath))


#if sys.platform == &quot;win32&quot;:
#    osPath = inPath.replace('/', os.sep)    #chenges slash to back slash in windows OS
    
print (osPath)</script><script>import nuke
import os
import sys

nodeSelected = nuke.selectedNode()
fileName = nodeSelected.knob('file').value()
print (fileName)

#print (nodeSelected)
layer = fileName.split('/')[-2]
#print (layer)

version = fileName.split('/')[-3]
#print (version)

osPath = []
inPath = fileName.split('/')[:-3]

print (inPath)
for i in inPath:
    print (i)
    #osPath.join( i )

#print (type(inPath))


#if sys.platform == &quot;win32&quot;:
#    osPath = inPath.replace('/', os.sep)    #chenges slash to back slash in windows OS
    
print (osPath)</script><script>import nuke
import os
import sys

nodeSelected = nuke.selectedNode()
fileName = nodeSelected.knob('file').value()
print (fileName)

#print (nodeSelected)
layer = fileName.split('/')[-2]
#print (layer)

version = fileName.split('/')[-3]
#print (version)

osPath = []
inPath = fileName.split('/')[:-3]

print (inPath)
for i in inPath:
    print (i)
    osPath += i

#print (type(inPath))


#if sys.platform == &quot;win32&quot;:
#    osPath = inPath.replace('/', os.sep)    #chenges slash to back slash in windows OS
    
print (osPath)</script><script>import nuke
import os
import sys

nodeSelected = nuke.selectedNode()
fileName = nodeSelected.knob('file').value()
print (fileName)

#print (nodeSelected)
layer = fileName.split('/')[-2]
#print (layer)

version = fileName.split('/')[-3]
#print (version)

osPath = []
inPath = fileName.split('/')[:-3]

print (inPath)
for i in inPath:
    print (i)
    osPath += i

#print (type(inPath))


#if sys.platform == &quot;win32&quot;:
#    osPath = inPath.replace('/', os.sep)    #chenges slash to back slash in windows OS
    
print (str(osPath))</script><script>import nuke
import os
import sys

nodeSelected = nuke.selectedNode()
fileName = nodeSelected.knob('file').value()
print (fileName)

#print (nodeSelected)
layer = fileName.split('/')[-2]
#print (layer)

version = fileName.split('/')[-3]
#print (version)

osPath = []
inPath = fileName.split('/')[:-3]

print (inPath)
for i in inPath:
    print (i)
    osPath += os.sep + i

#print (type(inPath))


#if sys.platform == &quot;win32&quot;:
#    osPath = inPath.replace('/', os.sep)    #chenges slash to back slash in windows OS
    
print (str(osPath))</script><script>import nuke
import os
import sys

nodeSelected = nuke.selectedNode()
fileName = nodeSelected.knob('file').value()
print (fileName)

#print (nodeSelected)
layer = fileName.split('/')[-2]
#print (layer)

version = fileName.split('/')[-3]
#print (version)

osPath = []
inPath = fileName.split('/')[:-3]

print (inPath)
for i in inPath:
    print (i)
    osPath +=  i

#print (type(inPath))


#if sys.platform == &quot;win32&quot;:
#    osPath = inPath.replace('/', os.sep)    #chenges slash to back slash in windows OS
    
print (str(osPath))</script><script>import nuke
import os
import sys

nodeSelected = nuke.selectedNode()
fileName = nodeSelected.knob('file').value()
print (fileName)

#print (nodeSelected)
layer = fileName.split('/')[-2]
#print (layer)

version = fileName.split('/')[-3]
#print (version)

osPath = []
inPath = fileName.split('/')[:-3]

print (inPath)
for i in inPath:
    print (i)
    osPath += os.sep + i

#print (type(inPath))


#if sys.platform == &quot;win32&quot;:
#    osPath = inPath.replace('/', os.sep)    #chenges slash to back slash in windows OS
    
print (str(osPath))</script><script>import nuke
import os
import sys

nodeSelected = nuke.selectedNode()
fileName = nodeSelected.knob('file').value()
print (fileName)

#print (nodeSelected)
layer = fileName.split('/')[-2]
#print (layer)

version = fileName.split('/')[-3]
#print (version)

osPath = []
inPath = fileName.split('/')[:-3]

print (inPath)
for i in inPath:
    print (i)
    osPath += '/' + i

#print (type(inPath))


#if sys.platform == &quot;win32&quot;:
#    osPath = inPath.replace('/', os.sep)    #chenges slash to back slash in windows OS
    
print (str(osPath))</script><script>import nuke
import os
import sys

nodeSelected = nuke.selectedNode()
fileName = nodeSelected.knob('file').value()
print (fileName)

#print (nodeSelected)
layer = fileName.split('/')[-2]
#print (layer)

version = fileName.split('/')[-3]
#print (version)

osPath = []
inPath = fileName.split('/')[:-3]

print (inPath)
for i in inPath:
    print (i)
    osPath += '&quot;\&quot;' + i

#print (type(inPath))


#if sys.platform == &quot;win32&quot;:
#    osPath = inPath.replace('/', os.sep)    #chenges slash to back slash in windows OS
    
print (str(osPath))</script><script>import nuke
import os
import sys

nodeSelected = nuke.selectedNode()
fileName = nodeSelected.knob('file').value()
print (fileName)

#print (nodeSelected)
layer = fileName.split('/')[-2]
#print (layer)

version = fileName.split('/')[-3]
#print (version)

osPath = []
inPath = fileName.split('/')[:-3]

print (inPath)
for i in inPath:
    print (i)
    osPath += 'r&quot;\&quot;' + i

#print (type(inPath))


#if sys.platform == &quot;win32&quot;:
#    osPath = inPath.replace('/', os.sep)    #chenges slash to back slash in windows OS
    
print (str(osPath))</script><script>import nuke
import os
import sys

nodeSelected = nuke.selectedNode()
fileName = nodeSelected.knob('file').value()
print (fileName)

#print (nodeSelected)
layer = fileName.split('/')[-2]
#print (layer)

version = fileName.split('/')[-3]
#print (version)

osPath = []
inPath = fileName.split('/')[:-3]

print (inPath)
for i in inPath:
    print (i)
    osPath += os.sep + i

#print (type(inPath))


#if sys.platform == &quot;win32&quot;:
#    osPath = inPath.replace('/', os.sep)    #chenges slash to back slash in windows OS
    
print (str(osPath))</script><script>import nuke
import os
import sys

nodeSelected = nuke.selectedNode()
fileName = nodeSelected.knob('file').value()
print (fileName)

#print (nodeSelected)
layer = fileName.split('/')[-2]
#print (layer)

version = fileName.split('/')[-3]
#print (version)

osPath = []
inPath = fileName.split('/')[:-3]

print (inPath)
for i in inPath:
    print (i)
    osPath += os.sep + i

#print (type(inPath))


#if sys.platform == &quot;win32&quot;:
#    osPath = inPath.replace('/', os.sep)    #chenges slash to back slash in windows OS
    
print (str(osPath))</script>
